$date
   Thu May 23 22:15:36 2024
$end
$version
  2020.2
$end
$timescale
  1ps
$end
$scope module tinyriscv_soc_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var wire 32 # x3 [31:0] $end
$var wire 32 $ x26 [31:0] $end
$var wire 32 % x27 [31:0] $end
$var integer 32 & r $end
$scope module tinyriscv_soc_top_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 ) over $end
$var wire 1 * succ $end
$var wire 1 + halted_ind $end
$var wire 1 , uart_debug_pin $end
$var wire 1 - uart_tx_pin $end
$var wire 1 . uart_rx_pin $end
$var wire 16 / gpio_io [15:0] $end
$var wire 1 0 jtag_TCK $end
$var wire 1 1 jtag_TMS $end
$var wire 1 2 jtag_TDI $end
$var wire 1 3 jtag_TDO $end
$var wire 1 4 spi_miso $end
$var wire 1 5 spi_mosi $end
$var wire 1 6 spi_ss $end
$var wire 1 7 spi_clk $end
$var wire 32 8 m0_addr_i [31:0] $end
$var wire 32 9 m0_data_i [31:0] $end
$var wire 32 : m0_data_o [31:0] $end
$var wire 1 ; m0_req_i $end
$var wire 1 < m0_we_i $end
$var wire 32 = m1_addr_i [31:0] $end
$var wire 32 > m1_data_i [31:0] $end
$var wire 32 ? m1_data_o [31:0] $end
$var wire 1 @ m1_req_i $end
$var wire 1 A m1_we_i $end
$var wire 32 B m2_addr_i [31:0] $end
$var wire 32 C m2_data_i [31:0] $end
$var wire 32 D m2_data_o [31:0] $end
$var wire 1 E m2_req_i $end
$var wire 1 F m2_we_i $end
$var wire 32 G m3_addr_i [31:0] $end
$var wire 32 H m3_data_i [31:0] $end
$var wire 32 I m3_data_o [31:0] $end
$var wire 1 J m3_req_i $end
$var wire 1 K m3_we_i $end
$var wire 32 L s0_addr_o [31:0] $end
$var wire 32 M s0_data_o [31:0] $end
$var wire 32 N s0_data_i [31:0] $end
$var wire 1 O s0_we_o $end
$var wire 32 P s1_addr_o [31:0] $end
$var wire 32 Q s1_data_o [31:0] $end
$var wire 32 R s1_data_i [31:0] $end
$var wire 1 S s1_we_o $end
$var wire 32 T s2_addr_o [31:0] $end
$var wire 32 U s2_data_o [31:0] $end
$var wire 32 V s2_data_i [31:0] $end
$var wire 1 W s2_we_o $end
$var wire 32 X s3_addr_o [31:0] $end
$var wire 32 Y s3_data_o [31:0] $end
$var wire 32 Z s3_data_i [31:0] $end
$var wire 1 [ s3_we_o $end
$var wire 32 \ s4_addr_o [31:0] $end
$var wire 32 ] s4_data_o [31:0] $end
$var wire 32 ^ s4_data_i [31:0] $end
$var wire 1 _ s4_we_o $end
$var wire 32 ` s5_addr_o [31:0] $end
$var wire 32 a s5_data_o [31:0] $end
$var wire 32 b s5_data_i [31:0] $end
$var wire 1 c s5_we_o $end
$var wire 32 d s6_addr_o [31:0] $end
$var wire 32 e s6_data_o [31:0] $end
$var wire 32 f s6_data_i [31:0] $end
$var wire 1 g s6_we_o $end
$var wire 32 h s7_addr_o [31:0] $end
$var wire 32 i s7_data_o [31:0] $end
$var wire 32 j s7_data_i [31:0] $end
$var wire 1 k s7_we_o $end
$var wire 1 l rib_hold_flag_o $end
$var wire 1 m jtag_halt_req_o $end
$var wire 1 n jtag_reset_req_o $end
$var wire 5 o jtag_reg_addr_o [4:0] $end
$var wire 32 p jtag_reg_data_o [31:0] $end
$var wire 1 q jtag_reg_we_o $end
$var wire 32 r jtag_reg_data_i [31:0] $end
$var wire 8 s int_flag [7:0] $end
$var wire 1 t timer0_int $end
$var wire 16 u io_in [15:0] $end
$var wire 32 v gpio_ctrl [31:0] $end
$var wire 32 w gpio_data [31:0] $end
$var wire 1 x sda $end
$var wire 1 y scl $end
$scope module u_tinyriscv $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 8 rib_ex_addr_o [31:0] $end
$var wire 32 : rib_ex_data_i [31:0] $end
$var wire 32 9 rib_ex_data_o [31:0] $end
$var wire 1 ; rib_ex_req_o $end
$var wire 1 < rib_ex_we_o $end
$var wire 32 = rib_pc_addr_o [31:0] $end
$var wire 32 ? rib_pc_data_i [31:0] $end
$var wire 5 o jtag_reg_addr_i [4:0] $end
$var wire 32 p jtag_reg_data_i [31:0] $end
$var wire 1 q jtag_reg_we_i $end
$var wire 32 r jtag_reg_data_o [31:0] $end
$var wire 1 l rib_hold_flag_i $end
$var wire 1 m jtag_halt_flag_i $end
$var wire 1 n jtag_reset_flag_i $end
$var wire 8 s int_i [7:0] $end
$var wire 1 ) over $end
$var wire 1 * succ $end
$var wire 32 z pc_pc_o [31:0] $end
$var wire 32 { if_inst_o [31:0] $end
$var wire 32 | if_inst_addr_o [31:0] $end
$var wire 8 } if_int_flag_o [7:0] $end
$var wire 5 ~ id_reg1_raddr_o [4:0] $end
$var wire 5 !! id_reg2_raddr_o [4:0] $end
$var wire 32 "! id_inst_o [31:0] $end
$var wire 32 #! id_inst_addr_o [31:0] $end
$var wire 32 $! id_reg1_rdata_o [31:0] $end
$var wire 32 %! id_reg2_rdata_o [31:0] $end
$var wire 1 &! id_reg_we_o $end
$var wire 5 '! id_reg_waddr_o [4:0] $end
$var wire 32 (! id_csr_raddr_o [31:0] $end
$var wire 1 )! id_csr_we_o $end
$var wire 32 *! id_csr_rdata_o [31:0] $end
$var wire 32 +! id_csr_waddr_o [31:0] $end
$var wire 32 ,! id_op1_o [31:0] $end
$var wire 32 -! id_op2_o [31:0] $end
$var wire 32 .! id_op1_jump_o [31:0] $end
$var wire 32 /! id_op2_jump_o [31:0] $end
$var wire 32 0! ie_inst_o [31:0] $end
$var wire 32 1! ie_inst_addr_o [31:0] $end
$var wire 1 2! ie_reg_we_o $end
$var wire 5 3! ie_reg_waddr_o [4:0] $end
$var wire 32 4! ie_reg1_rdata_o [31:0] $end
$var wire 32 5! ie_reg2_rdata_o [31:0] $end
$var wire 1 6! ie_csr_we_o $end
$var wire 32 7! ie_csr_waddr_o [31:0] $end
$var wire 32 8! ie_csr_rdata_o [31:0] $end
$var wire 32 9! ie_op1_o [31:0] $end
$var wire 32 :! ie_op2_o [31:0] $end
$var wire 32 ;! ie_op1_jump_o [31:0] $end
$var wire 32 <! ie_op2_jump_o [31:0] $end
$var wire 32 =! ex_mem_wdata_o [31:0] $end
$var wire 32 >! ex_mem_raddr_o [31:0] $end
$var wire 32 ?! ex_mem_waddr_o [31:0] $end
$var wire 1 @! ex_mem_we_o $end
$var wire 1 A! ex_mem_req_o $end
$var wire 32 B! ex_reg_wdata_o [31:0] $end
$var wire 1 C! ex_reg_we_o $end
$var wire 5 D! ex_reg_waddr_o [4:0] $end
$var wire 1 E! ex_hold_flag_o $end
$var wire 1 F! ex_jump_flag_o $end
$var wire 32 G! ex_jump_addr_o [31:0] $end
$var wire 1 H! ex_div_start_o $end
$var wire 32 I! ex_div_dividend_o [31:0] $end
$var wire 32 J! ex_div_divisor_o [31:0] $end
$var wire 3 K! ex_div_op_o [2:0] $end
$var wire 5 L! ex_div_reg_waddr_o [4:0] $end
$var wire 32 M! ex_csr_wdata_o [31:0] $end
$var wire 1 N! ex_csr_we_o $end
$var wire 32 O! ex_csr_waddr_o [31:0] $end
$var wire 1 P! ex_sid_start_o $end
$var wire 32 Q! regs_rdata1_o [31:0] $end
$var wire 32 R! regs_rdata2_o [31:0] $end
$var wire 32 S! csr_data_o [31:0] $end
$var wire 32 T! csr_clint_data_o [31:0] $end
$var wire 1 U! csr_global_int_en_o $end
$var wire 32 V! csr_clint_csr_mtvec [31:0] $end
$var wire 32 W! csr_clint_csr_mepc [31:0] $end
$var wire 32 X! csr_clint_csr_mstatus [31:0] $end
$var wire 3 Y! ctrl_hold_flag_o [2:0] $end
$var wire 1 Z! ctrl_jump_flag_o $end
$var wire 32 [! ctrl_jump_addr_o [31:0] $end
$var wire 32 \! div_result_o [31:0] $end
$var wire 1 ]! div_ready_o $end
$var wire 1 ^! div_busy_o $end
$var wire 5 _! div_reg_waddr_o [4:0] $end
$var wire 1 `! clint_we_o $end
$var wire 32 a! clint_waddr_o [31:0] $end
$var wire 32 b! clint_raddr_o [31:0] $end
$var wire 32 c! clint_data_o [31:0] $end
$var wire 32 d! clint_int_addr_o [31:0] $end
$var wire 1 e! clint_int_assert_o $end
$var wire 1 f! clint_hold_flag_o $end
$var wire 32 g! sid_result_o [31:0] $end
$var wire 32 h! sid_mem_waddr_o [31:0] $end
$var wire 1 i! sid_busy_o $end
$var wire 1 j! sid_ready_o $end
$var wire 1 k! sid_waddr_o $end
$scope module u_pc_reg $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 Z! jump_flag_i $end
$var wire 32 [! jump_addr_i [31:0] $end
$var wire 3 Y! hold_flag_i [2:0] $end
$var wire 1 n jtag_reset_flag_i $end
$var reg 32 l! pc_o [31:0] $end
$upscope $end
$scope module u_ctrl $end
$var wire 1 ( rst $end
$var wire 1 F! jump_flag_i $end
$var wire 32 G! jump_addr_i [31:0] $end
$var wire 1 E! hold_flag_ex_i $end
$var wire 1 l hold_flag_rib_i $end
$var wire 1 m jtag_halt_flag_i $end
$var wire 1 f! hold_flag_clint_i $end
$var reg 3 m! hold_flag_o [2:0] $end
$var reg 1 n! jump_flag_o $end
$var reg 32 o! jump_addr_o [31:0] $end
$upscope $end
$scope module u_regs $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 C! we_i $end
$var wire 5 D! waddr_i [4:0] $end
$var wire 32 B! wdata_i [31:0] $end
$var wire 1 q jtag_we_i $end
$var wire 5 o jtag_addr_i [4:0] $end
$var wire 32 p jtag_data_i [31:0] $end
$var wire 5 ~ raddr1_i [4:0] $end
$var reg 32 p! rdata1_o [31:0] $end
$var wire 5 !! raddr2_i [4:0] $end
$var reg 32 q! rdata2_o [31:0] $end
$var reg 32 r! jtag_data_o [31:0] $end
$var wire 1 ) over $end
$var wire 1 * succ $end
$upscope $end
$scope module u_csr_reg $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 N! we_i $end
$var wire 32 (! raddr_i [31:0] $end
$var wire 32 O! waddr_i [31:0] $end
$var wire 32 M! data_i [31:0] $end
$var wire 1 `! clint_we_i $end
$var wire 32 b! clint_raddr_i [31:0] $end
$var wire 32 a! clint_waddr_i [31:0] $end
$var wire 32 c! clint_data_i [31:0] $end
$var wire 1 U! global_int_en_o $end
$var reg 32 s! clint_data_o [31:0] $end
$var wire 32 V! clint_csr_mtvec [31:0] $end
$var wire 32 W! clint_csr_mepc [31:0] $end
$var wire 32 X! clint_csr_mstatus [31:0] $end
$var reg 32 t! data_o [31:0] $end
$var reg 64 u! cycle [63:0] $end
$var reg 32 v! mtvec [31:0] $end
$var reg 32 w! mcause [31:0] $end
$var reg 32 x! mepc [31:0] $end
$var reg 32 y! mie [31:0] $end
$var reg 32 z! mstatus [31:0] $end
$var reg 32 {! mscratch [31:0] $end
$upscope $end
$scope module u_if_id $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 ? inst_i [31:0] $end
$var wire 32 z inst_addr_i [31:0] $end
$var wire 3 Y! hold_flag_i [2:0] $end
$var wire 8 s int_flag_i [7:0] $end
$var wire 8 } int_flag_o [7:0] $end
$var wire 32 { inst_o [31:0] $end
$var wire 32 | inst_addr_o [31:0] $end
$var wire 1 |! hold_en $end
$var wire 32 }! inst [31:0] $end
$var wire 32 ~! inst_addr [31:0] $end
$var wire 8 !" int_flag [7:0] $end
$scope module inst_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 |! hold_en $end
$var wire 32 "" def_val [31:0] $end
$var wire 32 ? din [31:0] $end
$var wire 32 }! qout [31:0] $end
$var reg 32 #" qout_r [31:0] $end
$upscope $end
$scope module inst_addr_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 |! hold_en $end
$var wire 32 $" def_val [31:0] $end
$var wire 32 z din [31:0] $end
$var wire 32 ~! qout [31:0] $end
$var reg 32 %" qout_r [31:0] $end
$upscope $end
$scope module int_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 |! hold_en $end
$var wire 8 &" def_val [7:0] $end
$var wire 8 s din [7:0] $end
$var wire 8 !" qout [7:0] $end
$var reg 8 '" qout_r [7:0] $end
$upscope $end
$upscope $end
$scope module u_id $end
$var wire 1 ( rst $end
$var wire 32 { inst_i [31:0] $end
$var wire 32 | inst_addr_i [31:0] $end
$var wire 32 Q! reg1_rdata_i [31:0] $end
$var wire 32 R! reg2_rdata_i [31:0] $end
$var wire 32 S! csr_rdata_i [31:0] $end
$var wire 1 F! ex_jump_flag_i $end
$var reg 5 (" reg1_raddr_o [4:0] $end
$var reg 5 )" reg2_raddr_o [4:0] $end
$var reg 32 *" csr_raddr_o [31:0] $end
$var reg 32 +" op1_o [31:0] $end
$var reg 32 ," op2_o [31:0] $end
$var reg 32 -" op1_jump_o [31:0] $end
$var reg 32 ." op2_jump_o [31:0] $end
$var reg 32 /" inst_o [31:0] $end
$var reg 32 0" inst_addr_o [31:0] $end
$var reg 32 1" reg1_rdata_o [31:0] $end
$var reg 32 2" reg2_rdata_o [31:0] $end
$var reg 1 3" reg_we_o $end
$var reg 5 4" reg_waddr_o [4:0] $end
$var reg 1 5" csr_we_o $end
$var reg 32 6" csr_rdata_o [31:0] $end
$var reg 32 7" csr_waddr_o [31:0] $end
$var wire 7 8" opcode [6:0] $end
$var wire 3 9" funct3 [2:0] $end
$var wire 7 :" funct7 [6:0] $end
$var wire 5 ;" rd [4:0] $end
$var wire 5 <" rs1 [4:0] $end
$var wire 5 =" rs2 [4:0] $end
$upscope $end
$scope module u_id_ex $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 "! inst_i [31:0] $end
$var wire 32 #! inst_addr_i [31:0] $end
$var wire 1 &! reg_we_i $end
$var wire 5 '! reg_waddr_i [4:0] $end
$var wire 32 $! reg1_rdata_i [31:0] $end
$var wire 32 %! reg2_rdata_i [31:0] $end
$var wire 1 )! csr_we_i $end
$var wire 32 +! csr_waddr_i [31:0] $end
$var wire 32 *! csr_rdata_i [31:0] $end
$var wire 32 ,! op1_i [31:0] $end
$var wire 32 -! op2_i [31:0] $end
$var wire 32 .! op1_jump_i [31:0] $end
$var wire 32 /! op2_jump_i [31:0] $end
$var wire 3 Y! hold_flag_i [2:0] $end
$var wire 32 9! op1_o [31:0] $end
$var wire 32 :! op2_o [31:0] $end
$var wire 32 ;! op1_jump_o [31:0] $end
$var wire 32 <! op2_jump_o [31:0] $end
$var wire 32 0! inst_o [31:0] $end
$var wire 32 1! inst_addr_o [31:0] $end
$var wire 1 2! reg_we_o $end
$var wire 5 3! reg_waddr_o [4:0] $end
$var wire 32 4! reg1_rdata_o [31:0] $end
$var wire 32 5! reg2_rdata_o [31:0] $end
$var wire 1 6! csr_we_o $end
$var wire 32 7! csr_waddr_o [31:0] $end
$var wire 32 8! csr_rdata_o [31:0] $end
$var wire 1 >" hold_en $end
$var wire 32 ?" inst [31:0] $end
$var wire 32 @" inst_addr [31:0] $end
$var wire 1 A" reg_we $end
$var wire 5 B" reg_waddr [4:0] $end
$var wire 32 C" reg1_rdata [31:0] $end
$var wire 32 D" reg2_rdata [31:0] $end
$var wire 1 E" csr_we $end
$var wire 32 F" csr_waddr [31:0] $end
$var wire 32 G" csr_rdata [31:0] $end
$var wire 32 H" op1 [31:0] $end
$var wire 32 I" op2 [31:0] $end
$var wire 32 J" op1_jump [31:0] $end
$var wire 32 K" op2_jump [31:0] $end
$scope module inst_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 L" def_val [31:0] $end
$var wire 32 "! din [31:0] $end
$var wire 32 ?" qout [31:0] $end
$var reg 32 M" qout_r [31:0] $end
$upscope $end
$scope module inst_addr_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 N" def_val [31:0] $end
$var wire 32 #! din [31:0] $end
$var wire 32 @" qout [31:0] $end
$var reg 32 O" qout_r [31:0] $end
$upscope $end
$scope module reg_we_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 1 P" def_val [0:0] $end
$var wire 1 &! din [0:0] $end
$var wire 1 A" qout [0:0] $end
$var reg 1 Q" qout_r [0:0] $end
$upscope $end
$scope module reg_waddr_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 5 R" def_val [4:0] $end
$var wire 5 '! din [4:0] $end
$var wire 5 B" qout [4:0] $end
$var reg 5 S" qout_r [4:0] $end
$upscope $end
$scope module reg1_rdata_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 T" def_val [31:0] $end
$var wire 32 $! din [31:0] $end
$var wire 32 C" qout [31:0] $end
$var reg 32 U" qout_r [31:0] $end
$upscope $end
$scope module reg2_rdata_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 V" def_val [31:0] $end
$var wire 32 %! din [31:0] $end
$var wire 32 D" qout [31:0] $end
$var reg 32 W" qout_r [31:0] $end
$upscope $end
$scope module csr_we_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 1 X" def_val [0:0] $end
$var wire 1 )! din [0:0] $end
$var wire 1 E" qout [0:0] $end
$var reg 1 Y" qout_r [0:0] $end
$upscope $end
$scope module csr_waddr_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 Z" def_val [31:0] $end
$var wire 32 +! din [31:0] $end
$var wire 32 F" qout [31:0] $end
$var reg 32 [" qout_r [31:0] $end
$upscope $end
$scope module csr_rdata_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 \" def_val [31:0] $end
$var wire 32 *! din [31:0] $end
$var wire 32 G" qout [31:0] $end
$var reg 32 ]" qout_r [31:0] $end
$upscope $end
$scope module op1_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 ^" def_val [31:0] $end
$var wire 32 ,! din [31:0] $end
$var wire 32 H" qout [31:0] $end
$var reg 32 _" qout_r [31:0] $end
$upscope $end
$scope module op2_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 `" def_val [31:0] $end
$var wire 32 -! din [31:0] $end
$var wire 32 I" qout [31:0] $end
$var reg 32 a" qout_r [31:0] $end
$upscope $end
$scope module op1_jump_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 b" def_val [31:0] $end
$var wire 32 .! din [31:0] $end
$var wire 32 J" qout [31:0] $end
$var reg 32 c" qout_r [31:0] $end
$upscope $end
$scope module op2_jump_ff $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 >" hold_en $end
$var wire 32 d" def_val [31:0] $end
$var wire 32 /! din [31:0] $end
$var wire 32 K" qout [31:0] $end
$var reg 32 e" qout_r [31:0] $end
$upscope $end
$upscope $end
$scope module u_ex $end
$var wire 1 ( rst $end
$var wire 32 0! inst_i [31:0] $end
$var wire 32 1! inst_addr_i [31:0] $end
$var wire 1 2! reg_we_i $end
$var wire 5 3! reg_waddr_i [4:0] $end
$var wire 32 4! reg1_rdata_i [31:0] $end
$var wire 32 5! reg2_rdata_i [31:0] $end
$var wire 1 6! csr_we_i $end
$var wire 32 7! csr_waddr_i [31:0] $end
$var wire 32 8! csr_rdata_i [31:0] $end
$var wire 1 e! int_assert_i $end
$var wire 32 d! int_addr_i [31:0] $end
$var wire 32 9! op1_i [31:0] $end
$var wire 32 :! op2_i [31:0] $end
$var wire 32 ;! op1_jump_i [31:0] $end
$var wire 32 <! op2_jump_i [31:0] $end
$var wire 32 : mem_rdata_i [31:0] $end
$var wire 1 ]! div_ready_i $end
$var wire 32 \! div_result_i [31:0] $end
$var wire 1 ^! div_busy_i $end
$var wire 5 _! div_reg_waddr_i [4:0] $end
$var wire 1 j! sid_ready_i $end
$var wire 1 i! sid_busy_i $end
$var wire 32 g! sid_result_i [31:0] $end
$var wire 32 h! sid_mem_waddr_i [31:0] $end
$var reg 32 f" mem_wdata_o [31:0] $end
$var reg 32 g" mem_raddr_o [31:0] $end
$var reg 32 h" mem_waddr_o [31:0] $end
$var wire 1 @! mem_we_o $end
$var wire 1 A! mem_req_o $end
$var wire 32 B! reg_wdata_o [31:0] $end
$var wire 1 C! reg_we_o $end
$var wire 5 D! reg_waddr_o [4:0] $end
$var reg 32 i" csr_wdata_o [31:0] $end
$var wire 1 N! csr_we_o $end
$var wire 32 O! csr_waddr_o [31:0] $end
$var wire 1 H! div_start_o $end
$var reg 32 j" div_dividend_o [31:0] $end
$var reg 32 k" div_divisor_o [31:0] $end
$var reg 3 l" div_op_o [2:0] $end
$var reg 5 m" div_reg_waddr_o [4:0] $end
$var wire 1 E! hold_flag_o $end
$var wire 1 F! jump_flag_o $end
$var wire 32 G! jump_addr_o [31:0] $end
$var wire 1 P! sid_start_o $end
$var wire 2 n" mem_raddr_index [1:0] $end
$var wire 2 o" mem_waddr_index [1:0] $end
$var wire 64 p" mul_temp [63:0] $end
$var wire 64 q" mul_temp_invert [63:0] $end
$var wire 32 r" sr_shift [31:0] $end
$var wire 32 s" sri_shift [31:0] $end
$var wire 32 t" sr_shift_mask [31:0] $end
$var wire 32 u" sri_shift_mask [31:0] $end
$var wire 32 v" op1_add_op2_res [31:0] $end
$var wire 32 w" op1_jump_add_op2_jump_res [31:0] $end
$var wire 32 x" reg1_data_invert [31:0] $end
$var wire 32 y" reg2_data_invert [31:0] $end
$var wire 1 z" op1_ge_op2_signed $end
$var wire 1 {" op1_ge_op2_unsigned $end
$var wire 1 |" op1_eq_op2 $end
$var reg 32 }" mul_op1 [31:0] $end
$var reg 32 ~" mul_op2 [31:0] $end
$var wire 7 !# opcode [6:0] $end
$var wire 3 "# funct3 [2:0] $end
$var wire 7 ## funct7 [6:0] $end
$var wire 5 $# rd [4:0] $end
$var wire 5 %# uimm [4:0] $end
$var reg 32 &# reg_wdata [31:0] $end
$var reg 1 '# reg_we $end
$var reg 5 (# reg_waddr [4:0] $end
$var reg 32 )# div_wdata [31:0] $end
$var reg 1 *# div_we $end
$var reg 5 +# div_waddr [4:0] $end
$var reg 1 ,# div_hold_flag $end
$var reg 1 -# div_jump_flag $end
$var reg 32 .# div_jump_addr [31:0] $end
$var reg 1 /# hold_flag $end
$var reg 1 0# jump_flag $end
$var reg 32 1# jump_addr [31:0] $end
$var reg 1 2# mem_we $end
$var reg 1 3# mem_req $end
$var reg 1 4# div_start $end
$var reg 1 5# sid_start $end
$var reg 1 6# sid_hold_flag $end
$upscope $end
$scope module u_div $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 I! dividend_i [31:0] $end
$var wire 32 J! divisor_i [31:0] $end
$var wire 1 H! start_i $end
$var wire 3 K! op_i [2:0] $end
$var wire 5 L! reg_waddr_i [4:0] $end
$var reg 32 7# result_o [31:0] $end
$var reg 1 8# ready_o $end
$var reg 1 9# busy_o $end
$var reg 5 :# reg_waddr_o [4:0] $end
$var reg 32 ;# dividend_r [31:0] $end
$var reg 32 <# divisor_r [31:0] $end
$var reg 3 =# op_r [2:0] $end
$var reg 4 ># state [3:0] $end
$var reg 32 ?# count [31:0] $end
$var reg 32 @# div_result [31:0] $end
$var reg 32 A# div_remain [31:0] $end
$var reg 32 B# minuend [31:0] $end
$var reg 1 C# invert_result $end
$var wire 1 D# op_div $end
$var wire 1 E# op_divu $end
$var wire 1 F# op_rem $end
$var wire 1 G# op_remu $end
$var wire 32 H# dividend_invert [31:0] $end
$var wire 32 I# divisor_invert [31:0] $end
$var wire 1 J# minuend_ge_divisor $end
$var wire 32 K# minuend_sub_res [31:0] $end
$var wire 32 L# div_result_tmp [31:0] $end
$var wire 32 M# minuend_tmp [31:0] $end
$upscope $end
$scope module u_clint $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 8 } int_flag_i [7:0] $end
$var wire 32 "! inst_i [31:0] $end
$var wire 32 #! inst_addr_i [31:0] $end
$var wire 1 F! jump_flag_i $end
$var wire 32 G! jump_addr_i [31:0] $end
$var wire 1 H! div_started_i $end
$var wire 1 P! sid_started_i $end
$var wire 3 Y! hold_flag_i [2:0] $end
$var wire 32 T! data_i [31:0] $end
$var wire 32 V! csr_mtvec [31:0] $end
$var wire 32 W! csr_mepc [31:0] $end
$var wire 32 X! csr_mstatus [31:0] $end
$var wire 1 U! global_int_en_i $end
$var wire 1 f! hold_flag_o $end
$var reg 1 N# we_o $end
$var reg 32 O# waddr_o [31:0] $end
$var reg 32 P# raddr_o [31:0] $end
$var reg 32 Q# data_o [31:0] $end
$var reg 32 R# int_addr_o [31:0] $end
$var reg 1 S# int_assert_o $end
$var reg 4 T# int_state [3:0] $end
$var reg 5 U# csr_state [4:0] $end
$var reg 32 V# inst_addr [31:0] $end
$var reg 32 W# cause [31:0] $end
$upscope $end
$scope module u_sid $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 P! start_i $end
$var reg 1 X# ready_o $end
$var reg 1 Y# busy_o $end
$var reg 32 Z# result_o [31:0] $end
$var reg 32 [# mem_waddr_o [31:0] $end
$var reg 4 \# cnt_cycle [3:0] $end
$upscope $end
$upscope $end
$scope module u_rom $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 O we_i $end
$var wire 32 L addr_i [31:0] $end
$var wire 32 M data_i [31:0] $end
$var reg 32 ]# data_o [31:0] $end
$upscope $end
$scope module u_ram $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 S we_i $end
$var wire 32 P addr_i [31:0] $end
$var wire 32 Q data_i [31:0] $end
$var reg 32 ^# data_o [31:0] $end
$upscope $end
$scope module timer_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 U data_i [31:0] $end
$var wire 32 T addr_i [31:0] $end
$var wire 1 W we_i $end
$var reg 32 _# data_o [31:0] $end
$var wire 1 t int_sig_o $end
$var reg 32 `# timer_ctrl [31:0] $end
$var reg 32 a# timer_count [31:0] $end
$var reg 32 b# timer_value [31:0] $end
$upscope $end
$scope module uart_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 [ we_i $end
$var wire 32 X addr_i [31:0] $end
$var wire 32 Y data_i [31:0] $end
$var reg 32 c# data_o [31:0] $end
$var wire 1 - tx_pin $end
$var wire 1 . rx_pin $end
$var reg 1 d# tx_data_valid $end
$var reg 1 e# tx_data_ready $end
$var reg 4 f# state [3:0] $end
$var reg 16 g# cycle_cnt [15:0] $end
$var reg 4 h# bit_cnt [3:0] $end
$var reg 8 i# tx_data [7:0] $end
$var reg 1 j# tx_reg $end
$var reg 1 k# rx_q0 $end
$var reg 1 l# rx_q1 $end
$var wire 1 m# rx_negedge $end
$var reg 1 n# rx_start $end
$var reg 4 o# rx_clk_edge_cnt [3:0] $end
$var reg 1 p# rx_clk_edge_level $end
$var reg 1 q# rx_done $end
$var reg 16 r# rx_clk_cnt [15:0] $end
$var reg 16 s# rx_div_cnt [15:0] $end
$var reg 8 t# rx_data [7:0] $end
$var reg 1 u# rx_over $end
$var reg 32 v# uart_ctrl [31:0] $end
$var reg 32 w# uart_status [31:0] $end
$var reg 32 x# uart_baud [31:0] $end
$var reg 32 y# uart_rx [31:0] $end
$upscope $end
$scope module gpio_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 _ we_i $end
$var wire 32 \ addr_i [31:0] $end
$var wire 32 ] data_i [31:0] $end
$var reg 32 z# data_o [31:0] $end
$var wire 2 {# io_pin_i [1:0] $end
$var wire 32 v reg_ctrl [31:0] $end
$var wire 32 w reg_data [31:0] $end
$var reg 32 |# gpio_ctrl [31:0] $end
$var reg 32 }# gpio_data [31:0] $end
$upscope $end
$scope module spi_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 a data_i [31:0] $end
$var wire 32 ` addr_i [31:0] $end
$var wire 1 c we_i $end
$var reg 32 ~# data_o [31:0] $end
$var reg 1 !$ spi_mosi $end
$var wire 1 4 spi_miso $end
$var wire 1 6 spi_ss $end
$var reg 1 "$ spi_clk $end
$var reg 32 #$ spi_ctrl [31:0] $end
$var reg 32 $$ spi_data [31:0] $end
$var reg 32 %$ spi_status [31:0] $end
$var reg 9 &$ clk_cnt [8:0] $end
$var reg 1 '$ en $end
$var reg 5 ($ spi_clk_edge_cnt [4:0] $end
$var reg 1 )$ spi_clk_edge_level $end
$var reg 8 *$ rdata [7:0] $end
$var reg 1 +$ done $end
$var reg 4 ,$ bit_index [3:0] $end
$var wire 9 -$ div_cnt [8:0] $end
$upscope $end
$scope module pwm_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 g we_i $end
$var wire 32 d addr_i [31:0] $end
$var wire 32 e data_i [31:0] $end
$var reg 32 .$ pwm_out [31:0] $end
$var reg 4 /$ _pwmRegC [3:0] $end
$upscope $end
$scope module i2c_0 $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 i data_i [31:0] $end
$var wire 32 h addr_i [31:0] $end
$var wire 1 k we_i $end
$var wire 8 0$ data_o [7:0] $end
$var wire 1 x sda $end
$var wire 1 y scl $end
$var reg 3 1$ state [2:0] $end
$var reg 3 2$ next_state [2:0] $end
$var reg 8 3$ clk_div_counter [7:0] $end
$var reg 1 4$ scl_enable $end
$var reg 1 5$ sda_enable $end
$var reg 1 6$ sda_out $end
$var reg 8 7$ shift_reg [7:0] $end
$var reg 4 8$ bit_counter [3:0] $end
$var reg 1 9$ ack $end
$var reg 1 :$ start $end
$var reg 1 ;$ rw $end
$var reg 7 <$ slave_addr [6:0] $end
$var reg 8 =$ data_to_slave [7:0] $end
$var reg 8 >$ data_from_slave [7:0] $end
$var wire 1 ?$ done $end
$upscope $end
$scope module u_rib $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 32 8 m0_addr_i [31:0] $end
$var wire 32 9 m0_data_i [31:0] $end
$var reg 32 @$ m0_data_o [31:0] $end
$var wire 1 ; m0_req_i $end
$var wire 1 < m0_we_i $end
$var wire 32 = m1_addr_i [31:0] $end
$var wire 32 A$ m1_data_i [31:0] $end
$var reg 32 B$ m1_data_o [31:0] $end
$var wire 1 C$ m1_req_i $end
$var wire 1 D$ m1_we_i $end
$var wire 32 B m2_addr_i [31:0] $end
$var wire 32 C m2_data_i [31:0] $end
$var reg 32 E$ m2_data_o [31:0] $end
$var wire 1 E m2_req_i $end
$var wire 1 F m2_we_i $end
$var wire 32 G m3_addr_i [31:0] $end
$var wire 32 H m3_data_i [31:0] $end
$var reg 32 F$ m3_data_o [31:0] $end
$var wire 1 J m3_req_i $end
$var wire 1 K m3_we_i $end
$var reg 32 G$ s0_addr_o [31:0] $end
$var reg 32 H$ s0_data_o [31:0] $end
$var wire 32 N s0_data_i [31:0] $end
$var reg 1 I$ s0_we_o $end
$var reg 32 J$ s1_addr_o [31:0] $end
$var reg 32 K$ s1_data_o [31:0] $end
$var wire 32 R s1_data_i [31:0] $end
$var reg 1 L$ s1_we_o $end
$var reg 32 M$ s2_addr_o [31:0] $end
$var reg 32 N$ s2_data_o [31:0] $end
$var wire 32 V s2_data_i [31:0] $end
$var reg 1 O$ s2_we_o $end
$var reg 32 P$ s3_addr_o [31:0] $end
$var reg 32 Q$ s3_data_o [31:0] $end
$var wire 32 Z s3_data_i [31:0] $end
$var reg 1 R$ s3_we_o $end
$var reg 32 S$ s4_addr_o [31:0] $end
$var reg 32 T$ s4_data_o [31:0] $end
$var wire 32 ^ s4_data_i [31:0] $end
$var reg 1 U$ s4_we_o $end
$var reg 32 V$ s5_addr_o [31:0] $end
$var reg 32 W$ s5_data_o [31:0] $end
$var wire 32 b s5_data_i [31:0] $end
$var reg 1 X$ s5_we_o $end
$var reg 32 Y$ s6_addr_o [31:0] $end
$var reg 32 Z$ s6_data_o [31:0] $end
$var wire 32 f s6_data_i [31:0] $end
$var reg 1 [$ s6_we_o $end
$var reg 32 \$ s7_addr_o [31:0] $end
$var reg 32 ]$ s7_data_o [31:0] $end
$var wire 32 j s7_data_i [31:0] $end
$var reg 1 ^$ s7_we_o $end
$var reg 1 _$ hold_flag_o $end
$var wire 4 `$ req [3:0] $end
$var reg 2 a$ grant [1:0] $end
$upscope $end
$scope module u_uart_debug $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 , debug_en_i $end
$var wire 1 J req_o $end
$var reg 1 b$ mem_we_o $end
$var reg 32 c$ mem_addr_o [31:0] $end
$var reg 32 d$ mem_wdata_o [31:0] $end
$var wire 32 I mem_rdata_i [31:0] $end
$var reg 14 e$ state [13:0] $end
$var reg 8 f$ rec_bytes_index [7:0] $end
$var reg 8 g$ need_to_rec_bytes [7:0] $end
$var reg 16 h$ remain_packet_count [15:0] $end
$var reg 32 i$ fw_file_size [31:0] $end
$var reg 32 j$ write_mem_addr [31:0] $end
$var reg 32 k$ write_mem_data [31:0] $end
$var reg 8 l$ write_mem_byte_index0 [7:0] $end
$var reg 8 m$ write_mem_byte_index1 [7:0] $end
$var reg 8 n$ write_mem_byte_index2 [7:0] $end
$var reg 8 o$ write_mem_byte_index3 [7:0] $end
$var reg 16 p$ crc_result [15:0] $end
$var reg 4 q$ crc_bit_index [3:0] $end
$var reg 8 r$ crc_byte_index [7:0] $end
$upscope $end
$scope module u_jtag_top $end
$var wire 1 ' clk $end
$var wire 1 ( jtag_rst_n $end
$var wire 1 0 jtag_pin_TCK $end
$var wire 1 1 jtag_pin_TMS $end
$var wire 1 2 jtag_pin_TDI $end
$var wire 1 3 jtag_pin_TDO $end
$var wire 1 q reg_we_o $end
$var wire 5 o reg_addr_o [4:0] $end
$var wire 32 p reg_wdata_o [31:0] $end
$var wire 32 r reg_rdata_i [31:0] $end
$var wire 1 F mem_we_o $end
$var wire 32 B mem_addr_o [31:0] $end
$var wire 32 C mem_wdata_o [31:0] $end
$var wire 32 D mem_rdata_i [31:0] $end
$var wire 1 E op_req_o $end
$var wire 1 m halt_req_o $end
$var wire 1 n reset_req_o $end
$var wire 1 s$ dtm_ack_o $end
$var wire 1 t$ dtm_req_valid_o $end
$var wire 40 u$ dtm_req_data_o [39:0] $end
$var wire 1 v$ dm_ack_o $end
$var wire 40 w$ dm_resp_data_o [39:0] $end
$var wire 1 x$ dm_resp_valid_o $end
$var wire 1 y$ dm_op_req_o $end
$var wire 1 z$ dm_halt_req_o $end
$var wire 1 {$ dm_reset_req_o $end
$scope module u_jtag_driver $end
$var wire 1 ( rst_n $end
$var wire 1 0 jtag_TCK $end
$var wire 1 2 jtag_TDI $end
$var wire 1 1 jtag_TMS $end
$var reg 1 |$ jtag_TDO $end
$var wire 1 x$ dm_resp_i $end
$var wire 40 w$ dm_resp_data_i [39:0] $end
$var wire 1 s$ dtm_ack_o $end
$var wire 1 v$ dm_ack_i $end
$var wire 1 t$ dtm_req_valid_o $end
$var wire 40 u$ dtm_req_data_o [39:0] $end
$var reg 5 }$ ir_reg [4:0] $end
$var reg 40 ~$ shift_reg [39:0] $end
$var reg 4 !% jtag_state [3:0] $end
$var wire 1 "% is_busy $end
$var reg 1 #% sticky_busy $end
$var reg 1 $% dtm_req_valid $end
$var reg 40 %% dtm_req_data [39:0] $end
$var reg 40 &% dm_resp_data [39:0] $end
$var reg 1 '% dm_is_busy $end
$var wire 6 (% addr_bits [5:0] $end
$var wire 40 )% busy_response [39:0] $end
$var wire 40 *% none_busy_response [39:0] $end
$var wire 32 +% idcode [31:0] $end
$var wire 32 ,% dtmcs [31:0] $end
$var wire 2 -% dmi_stat [1:0] $end
$var wire 1 .% dtm_reset $end
$var wire 1 /% tx_idle $end
$var wire 1 0% rx_valid $end
$var wire 40 1% rx_data [39:0] $end
$var wire 1 2% tx_valid $end
$var wire 40 3% tx_data [39:0] $end
$scope module tx $end
$var wire 1 0 clk $end
$var wire 1 ( rst_n $end
$var wire 1 v$ ack_i $end
$var wire 1 2% req_i $end
$var wire 40 3% req_data_i [39:0] $end
$var wire 1 /% idle_o $end
$var wire 1 t$ req_o $end
$var wire 40 u$ req_data_o [39:0] $end
$var reg 1 4% ack_d $end
$var reg 1 5% ack $end
$var reg 3 6% state [2:0] $end
$var reg 3 7% state_next [2:0] $end
$var reg 1 8% req $end
$var reg 40 9% req_data [39:0] $end
$var reg 1 :% idle $end
$upscope $end
$scope module rx $end
$var wire 1 0 clk $end
$var wire 1 ( rst_n $end
$var wire 1 x$ req_i $end
$var wire 40 w$ req_data_i [39:0] $end
$var wire 1 s$ ack_o $end
$var wire 40 1% recv_data_o [39:0] $end
$var wire 1 0% recv_rdy_o $end
$var reg 1 ;% req_d $end
$var reg 1 <% req $end
$var reg 2 =% state [1:0] $end
$var reg 2 >% state_next [1:0] $end
$var reg 40 ?% recv_data [39:0] $end
$var reg 1 @% recv_rdy $end
$var reg 1 A% ack $end
$upscope $end
$upscope $end
$scope module u_jtag_dm $end
$var wire 1 ' clk $end
$var wire 1 ( rst_n $end
$var wire 1 v$ dm_ack_o $end
$var wire 1 t$ dtm_req_valid_i $end
$var wire 40 u$ dtm_req_data_i [39:0] $end
$var wire 1 s$ dtm_ack_i $end
$var wire 40 w$ dm_resp_data_o [39:0] $end
$var wire 1 x$ dm_resp_valid_o $end
$var wire 1 q dm_reg_we_o $end
$var wire 5 o dm_reg_addr_o [4:0] $end
$var wire 32 p dm_reg_wdata_o [31:0] $end
$var wire 32 r dm_reg_rdata_i [31:0] $end
$var wire 1 F dm_mem_we_o $end
$var wire 32 B dm_mem_addr_o [31:0] $end
$var wire 32 C dm_mem_wdata_o [31:0] $end
$var wire 32 D dm_mem_rdata_i [31:0] $end
$var wire 1 E dm_op_req_o $end
$var wire 1 m dm_halt_req_o $end
$var wire 1 n dm_reset_req_o $end
$var reg 32 B% dcsr [31:0] $end
$var reg 32 C% dmstatus [31:0] $end
$var reg 32 D% dmcontrol [31:0] $end
$var reg 32 E% hartinfo [31:0] $end
$var reg 32 F% abstractcs [31:0] $end
$var reg 32 G% data0 [31:0] $end
$var reg 32 H% sbcs [31:0] $end
$var reg 32 I% sbaddress0 [31:0] $end
$var reg 32 J% sbdata0 [31:0] $end
$var reg 32 K% command [31:0] $end
$var reg 32 L% read_data [31:0] $end
$var reg 1 M% dm_reg_we $end
$var reg 5 N% dm_reg_addr [4:0] $end
$var reg 32 O% dm_reg_wdata [31:0] $end
$var reg 1 P% dm_mem_we $end
$var reg 32 Q% dm_mem_addr [31:0] $end
$var reg 32 R% dm_mem_wdata [31:0] $end
$var reg 1 S% dm_halt_req $end
$var reg 1 T% dm_reset_req $end
$var reg 1 U% need_resp $end
$var reg 1 V% is_read_reg $end
$var wire 1 W% rx_valid $end
$var wire 40 X% rx_data [39:0] $end
$var wire 32 Y% sbaddress0_next [31:0] $end
$var wire 40 Z% dm_resp_data [39:0] $end
$var wire 2 [% op [1:0] $end
$var wire 32 \% data [31:0] $end
$var wire 6 ]% address [5:0] $end
$var wire 1 ^% read_dmstatus $end
$var wire 1 _% tx_idle $end
$scope module tx $end
$var wire 1 ' clk $end
$var wire 1 ( rst_n $end
$var wire 1 s$ ack_i $end
$var wire 1 `% req_i $end
$var wire 40 Z% req_data_i [39:0] $end
$var wire 1 _% idle_o $end
$var wire 1 x$ req_o $end
$var wire 40 w$ req_data_o [39:0] $end
$var reg 1 a% ack_d $end
$var reg 1 b% ack $end
$var reg 3 c% state [2:0] $end
$var reg 3 d% state_next [2:0] $end
$var reg 1 e% req $end
$var reg 40 f% req_data [39:0] $end
$var reg 1 g% idle $end
$upscope $end
$scope module rx $end
$var wire 1 ' clk $end
$var wire 1 ( rst_n $end
$var wire 1 t$ req_i $end
$var wire 40 u$ req_data_i [39:0] $end
$var wire 1 v$ ack_o $end
$var wire 40 X% recv_data_o [39:0] $end
$var wire 1 W% recv_rdy_o $end
$var reg 1 h% req_d $end
$var reg 1 i% req $end
$var reg 2 j% state [1:0] $end
$var reg 2 k% state_next [1:0] $end
$var reg 40 l% recv_data [39:0] $end
$var reg 1 m% recv_rdy $end
$var reg 1 n% ack $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
b0 !!
bx !"
bx !#
x!$
b0 !%
0"
bx "!
b1 ""
bx "#
x"$
0"%
bx #
bx #!
bx #"
bx ##
bx #$
0#%
bx $
b0 $!
b0 $"
bx $#
bx $$
0$%
bx %
b0 %!
bx %"
bx %#
bx %$
b0 %%
bx &
0&!
b0 &"
b0 &#
bx &$
b0 &%
0'
b0 '!
bx '"
x'#
x'$
0'%
0(
b0 (!
b0 ("
bx (#
bx ($
b110 (%
x)
0)!
b0 )"
bx )#
x)$
b11 )%
x*
b0 *!
b0 *"
x*#
bx *$
b0 *%
1+
b0 +!
b0 +"
bx +#
x+$
b11110001000000000101001101111 +%
0,
b0 ,!
b0 ,"
x,#
bx ,$
b101000001100001 ,%
x-
b0 -!
b0 -"
x-#
b0xxxxxxxx -$
b0 -%
z.
b0 .!
b0 ."
bx .#
bx .$
x.%
bx /
b0 /!
bx /"
0/#
bx /$
1/%
z0
bx 0!
bx 0"
00#
b0 0$
00%
z1
bx 1!
b0 1"
b0 1#
b0 1$
b0 1%
z2
x2!
b0 2"
02#
b0 2$
02%
x3
bx 3!
03"
03#
b0 3$
b0 3%
z4
bx 4!
b0 4"
x4#
04$
04%
x5
bx 5!
05"
x5#
05$
05%
x6
x6!
b0 6"
x6#
16$
b1 6%
x7
bx 7!
b0 7"
bx 7#
b0 7$
b1 7%
b0 8
bx 8!
bx 8"
x8#
b0 8$
08%
b0 9
bx 9!
bx 9"
x9#
09$
b0 9%
b0 :
bx :!
bx :"
bx :#
x:$
1:%
0;
bx ;!
bx ;"
bx ;#
x;$
0;%
0<
bx <!
bx <"
bx <#
bx <$
0<%
bx =
b0 =!
bx ="
bx =#
bx =$
b1 =%
bz >
b0 >!
0>"
bx >#
bx >$
b1 >%
b1 ?
b0 ?!
bx ?"
bx ?#
0?$
b0 ?%
z@
0@!
bx @"
bx @#
b0 @$
0@%
zA
0A!
xA"
bx A#
b0 A$
0A%
b0 B
bx B!
bx B"
bx B#
b1 B$
b0 B%
b0 C
xC!
bx C"
xC#
1C$
b10000110000110010000010 C%
b0 D
bx D!
bx D"
xD#
0D$
b0 D%
0E
xE!
xE"
xE#
b0 E$
b0 E%
0F
xF!
bx F"
xF#
b0 F$
b1000000000000000000000011 F%
bx G
bx G!
bx G"
xG#
b0 G$
b0 G%
bx H
xH!
bx H"
bx H#
b0 H$
b100000000001000000010000000100 H%
b0 I
bx I!
bx I"
bx I#
0I$
b0 I%
0J
bx J!
bx J"
xJ#
b0 J$
b0 J%
xK
bx K!
bx K"
bx K#
b0 K$
b0 K%
b0 L
bx L!
b1 L"
bx L#
0L$
b0 L%
b0 M
b0 M!
bx M"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx M#
b0 M$
0M%
b0 N
xN!
b0 N"
xN#
b0 N$
b0 N%
0O
bx O!
bx O"
bx O#
0O$
b0 O%
b0 P
xP!
0P"
bx P#
b0 P$
0P%
b0 Q
b0 Q!
xQ"
bx Q#
b0 Q$
b0 Q%
b0 R
b0 R!
b0 R"
bx R#
0R$
b0 R%
0S
b0 S!
bx S"
xS#
b0 S$
0S%
b0 T
bx T!
b0 T"
b1 T#
b0 T$
0T%
b0 U
xU!
bx U"
bx U#
0U$
0U%
b0 V
bx V!
b0 V"
bx V#
b0 V$
0V%
0W
bx W!
bx W"
bx W#
b0 W$
0W%
b0 X
bx X!
0X"
xX#
0X$
b0 X%
b0 Y
b0 Y!
xY"
xY#
b0 Y$
b100 Y%
b0 Z
xZ!
b0 Z"
bx Z#
b0 Z$
b0 Z%
0[
bx [!
bx ["
bx [#
0[$
b0 [%
b0 \
bx \!
b0 \"
bx \#
b0 \$
b0 \%
b0 ]
x]!
bx ]"
b0 ]#
b0 ]$
b0 ]%
b0 ^
x^!
b0 ^"
b0 ^#
0^$
0^%
0_
bx _!
bx _"
b0 _#
0_$
1_%
b0 `
x`!
b0 `"
bx `#
b10 `$
0`%
b0 a
bx a!
bx a"
bx a#
b1 a$
0a%
b0 b
bx b!
b0 b"
bx b#
xb$
0b%
0c
bx c!
bx c"
b0 c#
bx c$
b1 c%
b0 d
bx d!
b0 d"
xd#
bx d$
b1 d%
b0 e
xe!
bx e"
xe#
bx e$
0e%
bx f
xf!
b0 f"
bx f#
bx f$
b0 f%
0g
bx g!
b0 g"
bx g#
bx g$
1g%
b0 h
bz h!
b0 h"
bx h#
bx h$
0h%
b0 i
xi!
b0 i"
bx i#
bx i$
0i%
bz00000000 j
xj!
bx j"
xj#
bx j$
b1 j%
0k
xk!
bx k"
xk#
bx k$
b1 k%
0l
bx l!
bx l"
xl#
bx l$
b0 l%
0m
b0 m!
bx m"
xm#
bx m$
0m%
0n
xn!
bx n"
xn#
bx n$
0n%
b0 o
bx o!
bx o"
bx o#
bx o$
b0 p
b0 p!
bx p"
xp#
bx p$
0q
b0 q!
bx q"
xq#
bx q$
b0 r
b0 r!
bx r"
bx r#
bx r$
b0x s
bx s!
bx s"
bx s#
0s$
xt
b0 t!
bx t"
bx t#
0t$
bx u
bx u!
bx u"
xu#
b0 u$
bx v
bx v!
bx v"
bx v#
0v$
bx w
bx w!
bx w"
bx w#
b0 w$
zx
bx x!
bx x"
bx x#
0x$
1y
bx y!
bx y"
bx y#
zy$
bx z
bx z!
xz"
b0 z#
zz$
bx {
bx {!
x{"
bx {#
z{$
bx |
0|!
x|"
bx |#
x|$
bx }
bx }!
bx }"
bx }#
bx }$
b0 ~
bx ~!
bx ~"
b0 ~#
bx ~$
$end
#10000
1!
b0 !"
b1 !#
0!$
b1 "!
b0 "#
0"$
b0 #!
b1 #"
b0 ##
b0 #$
b0 $#
b0 $$
b0 %"
b0 %#
b0 %$
b0 &#
b0 &$
1'
b0 '"
0'#
0'$
b0 ("
b0 (#
b0 ($
b0 )"
b0 )#
0)$
b0 *"
0*#
b0 *$
b0 +"
b0 +#
0+$
b0 ,"
0,#
b0 ,$
0-
b0 -"
0-#
b0 -$
b0 ."
b0 .#
b0 .$
bz /
b1 /"
b0 /$
b1 0!
b0 0"
b0 1!
b0 1"
b0 1#
02!
b0 2"
b0 3!
03"
b0 4!
b0 4"
04#
05
b0 5!
05"
05#
16
06!
b0 6"
06#
07
b0 7!
b0 7"
b0 7#
b0 8!
b1 8"
08#
b0 9!
b0 9"
09#
b0 :!
b0 :"
b0 :#
0:$
b0 ;!
b0 ;"
b0 ;#
0;$
b0 <!
b0 <"
b0 <#
b0 <$
b0 =
b0 ="
b0 =#
b0 =$
b1 >#
b0 >$
b0 ?
b1 ?"
b0 ?#
0@!
b0 @"
b0 @#
b0 @$
0A!
0A"
b0 A#
b0 B!
b0 B"
b0 B#
b0 B$
0C!
b0 C"
0C#
b0 D!
b0 D"
0D#
0E!
0E"
0E#
b0 E$
0F!
b0 F"
0F#
b0 F$
b0 G
b0 G!
b0 G"
0G#
b0 G$
b0 H
0H!
b0 H"
b0 H#
b0 H$
b0 I!
b0 I"
b0 I#
0I$
b0 J!
b0 J"
1J#
b0 J$
0K
b0 K!
b0 K"
b0 K#
b0 K$
b0 L!
b1 L#
0L$
b1 M"
b0 M#
b0 M$
0N!
0N#
b0 N$
b0 O!
b0 O"
b0 O#
0O$
0P!
b0 P$
0Q"
b0 Q#
b0 Q$
b0 R#
0R$
b0 S"
0S#
b0 S$
b0 T!
b1 T#
b0 T$
0U!
b0 U"
b1 U#
0U$
b0 V!
b0 V#
b0 V$
b0 W!
b0 W"
b0 W#
b0 W$
b0 X!
1X#
0X$
0Y"
0Y#
b0 Y$
0Z!
b110010 Z#
b0 Z$
b0 [!
b0 ["
b110000000000000000000000000000 [#
0[$
b0 \!
b0 \#
b0 \$
0]!
b0 ]"
b0 ]$
0^!
0^$
b0 _!
b0 _"
b0 _#
0`!
b0 `#
b0 a!
b0 a"
b0 a#
b0 b#
0b$
b0 c!
b0 c"
b0 c#
b0 c$
b0 d!
0d#
b0 d$
0e!
b0 e"
0e#
b1 e$
b0 f
0f!
b0 f"
b1 f#
b0 f$
b110010 g!
b0 g"
b0 g#
b0 g$
b0 h"
b0 h#
b0 h$
0i!
b0 i"
b0 i$
1j!
b0 j"
0j#
b0 j$
0k!
b0 k"
0k#
b0 k$
b0 l!
b0 l"
0l#
b0 l$
b0 m!
b0 m"
0m#
b0 m$
0n!
b0 n"
0n#
b0 n$
b0 o!
b0 o"
b0 o#
b0 o$
b0 p!
b0 p"
0p#
b0 p$
b0 q!
b0 q"
b0 q$
b0 r"
b0 r#
b0 r$
b0 s
b0 s!
b0 s"
b0 s#
0t
b0 t!
b11111111111111111111111111111111 t"
b0 t#
bz u
b0 u!
b11111111111111111111111111111111 u"
0u#
b0 v
b0 v!
b0 v"
b0 v#
b0 w
b0 w!
b0 w"
b0 w#
b0 x!
b0 x"
b110111000 x#
b0 y!
b0 y"
b0 y#
b0 z
b0 z!
1z"
b0 z#
b1 {
b0 {!
1{"
bz {#
b0 |
1|"
b0 |#
b0 }
b1 }!
b0 }"
b0 }#
b0 ~!
b0 ~"
b0 ~#
#20000
0!
0'
#30000
1!
1'
#40000
0!
1"
0'
1(
b101111 ?
b0 @$
b101111 B$
b0 E$
b0 F$
b0 G$
b0 H$
0I$
0J
b0 J$
b0 K$
0L$
b0 M$
b101111 N
b0 N$
0O$
b0 P$
b0 Q$
bx R
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
b101111 ]#
b0 ]$
bx ^#
0^$
b0 _#
b0 c#
b0 z#
b0 ~#
#50000
1!
b101111 "!
b101111 #"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b110 ,$
1-
b0 -"
b0 ."
b101111 /"
b0 0"
b0 1"
b0 2"
03"
b1 3$
b0 4"
05"
b0 6"
b0 7"
b101111 8"
b100 =
b0 @$
b101111 B$
b0 E$
b0 F$
b100 G$
b0 H$
0I$
b0 J$
b0 K$
b100 L
0L$
b0 M$
b0 N$
0O$
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
b101111 ]#
b0 ]$
0^$
1j#
zk#
b100 l!
b0 s!
b110111000 s#
b0 t!
b1 u!
b100 z
b101111 {
b101111 }!
#60000
0!
0'
#70000
1!
b101111 !#
b100 #!
b100 %"
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
b101111 /"
b101111 0!
b100 0"
b0 1"
b0 1#
b0 2"
03"
b10 3$
b0 4"
05"
15#
b0 6"
b0 7"
b1000 =
b101111 ?"
b0 @$
b101111 B$
b0 E$
b0 F$
b1000 G$
b0 H$
0I$
b0 J$
b0 K$
b1000 L
0L$
b101111 M"
b0 M$
b0 N$
0O$
1P!
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
b101111 ]#
b0 ]$
0^$
b0 f"
b0 g"
b0 h"
b0 i"
b0 j"
b0 k"
b1000 l!
b0 l"
zl#
b0 m"
xm#
b0 s!
b0 t!
b10 u!
b1000 z
b100 |
b0 }"
b100 ~!
b0 ~"
#80000
0!
0'
#90000
1!
b1000 #!
b1000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
b101111 /"
b1000 0"
b100 1!
b0 1"
b0 2"
03"
b11 3$
b0 4"
05"
05#
b0 6"
16#
b0 7"
b1100 =
1>"
b100 @"
b0 @$
b101111 B$
1E!
b0 E$
b0 F$
b1100 G$
b0 H$
0I$
b0 J$
b0 K$
b1100 L
0L$
b0 M$
b0 N$
b100 O"
0O$
0P!
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X#
0X$
b11 Y!
1Y#
b0 Y$
b110000 Z#
b0 Z$
b110000000000000000000000000000 [#
0[$
b1 \#
b0 \$
b101111 ]#
b0 ]$
0^$
b110000 g!
1i!
0j!
b1100 l!
b11 m!
0n!
b0 o!
b0 s!
b0 t!
b11 u!
b1100 z
b1000 |
1|!
b1000 ~!
#100000
0!
0'
#110000
1!
b1 !#
b1 "!
b0 #!
b1 #"
b0 %"
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
b1 /"
b1 0!
b0 0"
b0 1!
b0 1"
b0 1#
b0 2"
03"
b100 3$
b0 4"
05"
b0 6"
06#
b0 7"
b1 8"
0>"
b1 ?"
b0 @"
0E!
b1 M"
b0 O"
b1 T#
1X#
b0 Y!
0Y#
b110010 Z#
b110000000000000000000000000000 [#
b0 \#
b0 f"
b110010 g!
b0 g"
b0 h"
0i!
b0 i"
1j!
b0 j"
b0 k"
b0 l"
b0 m!
b0 m"
0n!
b0 o!
b0 s!
b0 t!
b100 u!
b1 {
b0 |
0|!
b1 }!
b0 }"
b0 ~!
b0 ~"
#120000
0!
0'
#130000
1!
b101111 "!
b1100 #!
b101111 #"
b1100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
b101111 /"
b1100 0"
b0 1"
b0 2"
03"
b101 3$
b0 4"
05"
b0 6"
b0 7"
b101111 8"
b10000 =
b0 @$
b101111 B$
b0 E$
b0 F$
b10000 G$
b0 H$
0I$
b0 J$
b0 K$
b10000 L
0L$
b0 M$
b0 N$
0O$
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
b101111 ]#
b0 ]$
0^$
b10000 l!
b0 s!
b0 t!
b101 u!
b10000 z
b101111 {
b1100 |
b101111 }!
b1100 ~!
#140000
0!
0'
#150000
1!
b101111 !#
b10000 #!
b10000 %"
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
b101111 /"
b101111 0!
b10000 0"
b1100 1!
b0 1"
b0 1#
b0 2"
03"
b110 3$
b0 4"
05"
15#
b0 6"
b0 7"
b10100 =
b101111 ?"
b1100 @"
b0 @$
b101111 B$
b0 E$
b0 F$
b10100 G$
b0 H$
0I$
b0 J$
b0 K$
b10100 L
0L$
b101111 M"
b0 M$
b0 N$
b1100 O"
0O$
1P!
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
b101111 ]#
b0 ]$
0^$
b0 f"
b0 g"
b0 h"
b0 i"
b0 j"
b0 k"
b10100 l!
b0 l"
b0 m"
b0 s!
b0 t!
b110 u!
b10100 z
b10000 |
b0 }"
b10000 ~!
b0 ~"
#160000
0!
0'
#170000
1!
b10100 #!
b10100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
b101111 /"
b10100 0"
b10000 1!
b0 1"
b0 2"
03"
b111 3$
b0 4"
05"
05#
b0 6"
16#
b0 7"
b11000 =
1>"
b10000 @"
b0 @$
b101111 B$
1E!
b0 E$
b0 F$
b11000 G$
b0 H$
0I$
b0 J$
b0 K$
b11000 L
0L$
b0 M$
b0 N$
b10000 O"
0O$
0P!
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X#
0X$
b11 Y!
1Y#
b0 Y$
b110000 Z#
b0 Z$
b110000000000000000000000000000 [#
0[$
b1 \#
b0 \$
b101111 ]#
b0 ]$
0^$
b110000 g!
1i!
0j!
b11000 l!
b11 m!
0n!
b0 o!
b0 s!
b0 t!
b111 u!
b11000 z
b10100 |
1|!
b10100 ~!
#180000
0!
0'
#190000
1!
b1 !#
b1 "!
b0 #!
b1 #"
b0 %"
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
b1 /"
b1 0!
b0 0"
b0 1!
b0 1"
b0 1#
b0 2"
03"
b1000 3$
b0 4"
05"
b0 6"
06#
b0 7"
b1 8"
0>"
b1 ?"
b0 @"
0E!
b1 M"
b0 O"
b1 T#
1X#
b0 Y!
0Y#
b110010 Z#
b110000000000000000000000000000 [#
b0 \#
b0 f"
b110010 g!
b0 g"
b0 h"
0i!
b0 i"
1j!
b0 j"
b0 k"
b0 l"
b0 m!
b0 m"
0n!
b0 o!
b0 s!
b0 t!
b1000 u!
b1 {
b0 |
0|!
b1 }!
b0 }"
b0 ~!
b0 ~"
#200000
0!
0'
#210000
1!
b101111 "!
b11000 #!
b101111 #"
b11000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
b101111 /"
b11000 0"
b0 1"
b0 2"
03"
b1001 3$
b0 4"
05"
b0 6"
b0 7"
b101111 8"
b11100 =
b0 @$
b101111 B$
b0 E$
b0 F$
b11100 G$
b0 H$
0I$
b0 J$
b0 K$
b11100 L
0L$
b0 M$
b0 N$
0O$
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
b101111 ]#
b0 ]$
0^$
b11100 l!
b0 s!
b0 t!
b1001 u!
b11100 z
b101111 {
b11000 |
b101111 }!
b11000 ~!
#220000
0!
0'
#230000
1!
b101111 !#
b11100 #!
b11100 %"
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
b101111 /"
b101111 0!
b11100 0"
b11000 1!
b0 1"
b0 1#
b0 2"
03"
b1010 3$
b0 4"
05"
15#
b0 6"
b0 7"
b100000 =
bx ?
b101111 ?"
b11000 @"
b0 @$
bx B$
b0 E$
b0 F$
b100000 G$
b0 H$
0I$
b0 J$
b0 K$
b100000 L
0L$
b101111 M"
b0 M$
bx N
b0 N$
b11000 O"
0O$
1P!
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b0 f"
b0 g"
b0 h"
b0 i"
b0 j"
b0 k"
b100000 l!
b0 l"
b0 m"
b0 s!
b0 t!
b1010 u!
b100000 z
b11100 |
b0 }"
b11100 ~!
b0 ~"
#240000
0!
0'
#250000
1!
bx "!
b100000 #!
bx #"
b100000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b100000 0"
b11100 1!
b0 1"
b0 2"
03"
b1011 3$
b0 4"
05"
05#
b0 6"
16#
b0 7"
bx 8"
bx 9"
bx :"
bx ;"
bx <"
b100100 =
bx ="
1>"
b11100 @"
b0 @$
bx B$
1E!
b0 E$
b0 F$
b100100 G$
b0 H$
0I$
b0 J$
b0 K$
b100100 L
0L$
b0 M$
b0 N$
b11100 O"
0O$
0P!
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X#
0X$
b11 Y!
1Y#
b0 Y$
b110000 Z#
b0 Z$
b110000000000000000000000000000 [#
0[$
b1 \#
b0 \$
bx ]#
b0 ]$
0^$
b110000 g!
1i!
0j!
b100100 l!
b11 m!
0n!
b0 o!
b0 s!
b0 t!
b1011 u!
b100100 z
bx {
b100000 |
1|!
bx }!
b100000 ~!
#260000
0!
0'
#270000
1!
b1 !#
b1 "!
b0 #!
b1 #"
b0 %"
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
b1 /"
b1 0!
b0 0"
b0 1!
b0 1"
b0 1#
b0 2"
03"
b1100 3$
b0 4"
05"
b0 6"
06#
b0 7"
b1 8"
b0 9"
b0 :"
b0 ;"
b0 <"
b0 ="
0>"
b1 ?"
b0 @"
0E!
b1 M"
b0 O"
b1 T#
1X#
b0 Y!
0Y#
b110010 Z#
b110000000000000000000000000000 [#
b0 \#
b0 f"
b110010 g!
b0 g"
b0 h"
0i!
b0 i"
1j!
b0 j"
b0 k"
b0 l"
b0 m!
b0 m"
0n!
b0 o!
b0 s!
b0 t!
b1100 u!
b1 {
b0 |
0|!
b1 }!
b0 }"
b0 ~!
b0 ~"
#280000
0!
0'
#290000
1!
bx "!
b100100 #!
bx #"
b100100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b100100 0"
b0 1"
b0 2"
03"
b1101 3$
b0 4"
05"
b0 6"
b0 7"
bx 8"
bx 9"
bx :"
bx ;"
bx <"
b101000 =
bx ="
b0 @$
bx B$
b0 E$
b0 F$
b101000 G$
b0 H$
0I$
b0 J$
b0 K$
b101000 L
0L$
b0 M$
b0 N$
0O$
b0 P$
b0 Q$
0R$
b0 S$
b1 T#
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b101000 l!
b0 s!
b0 t!
b1101 u!
b101000 z
bx {
b100100 |
bx }!
b100100 ~!
#300000
0!
0'
#310000
1!
bx !#
bx "#
b101000 #!
bx ##
bx $#
b101000 %"
bx %#
b0 &#
1'
b0 ("
b0 (#
b0 )"
b0 )#
b0 *"
b0 +"
b0 +#
b0 ,"
b0 -"
b0 ."
b0 .#
bx /"
bx 0!
b101000 0"
b100100 1!
b0 1"
b0 1#
b0 2"
03"
b1110 3$
b0 4"
05"
b0 6"
b0 7"
b101100 =
bx ?"
b100100 @"
b0 @$
bx B$
b0 E$
b0 F$
b101100 G$
b0 H$
0I$
b0 J$
bx K!
b0 K$
b101100 L
0L$
bx M"
b0 M$
b0 N$
b100100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b0 f"
b0 g"
b0 h"
b0 i"
b0 j"
b0 k"
b101100 l!
bx l"
b0 m"
bx n"
bx o"
b0 s!
bx s"
b0 t!
b1110 u!
bx u"
b101100 z
b101000 |
b0 }"
b101000 ~!
b0 ~"
#320000
0!
0'
#330000
1!
b101100 #!
b101100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b101100 0"
b101000 1!
b0 1"
b0 2"
03"
b1111 3$
b0 4"
05"
b0 6"
b0 7"
b110000 =
b101000 @"
b0 @$
bx B$
b0 E$
b0 F$
b110000 G$
b0 H$
0I$
b0 J$
b0 K$
b110000 L
0L$
b0 M$
b0 N$
b101000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b110000 l!
b0 s!
b0 t!
b1111 u!
b110000 z
b101100 |
b101100 ~!
#340000
0!
0'
#350000
1!
b110000 #!
b110000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b110000 0"
b101100 1!
b0 1"
b0 2"
03"
b10000 3$
b0 4"
05"
b0 6"
b0 7"
b110100 =
b101100 @"
b0 @$
bx B$
b0 E$
b0 F$
b110100 G$
b0 H$
0I$
b0 J$
b0 K$
b110100 L
0L$
b0 M$
b0 N$
b101100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b110100 l!
b0 s!
b0 t!
b10000 u!
b110100 z
b110000 |
b110000 ~!
#360000
0!
0'
#370000
1!
b110100 #!
b110100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b110100 0"
b110000 1!
b0 1"
b0 2"
03"
b10001 3$
b0 4"
05"
b0 6"
b0 7"
b111000 =
b110000 @"
b0 @$
bx B$
b0 E$
b0 F$
b111000 G$
b0 H$
0I$
b0 J$
b0 K$
b111000 L
0L$
b0 M$
b0 N$
b110000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b111000 l!
b0 s!
b0 t!
b10001 u!
b111000 z
b110100 |
b110100 ~!
#380000
0!
0'
#390000
1!
b111000 #!
b111000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b111000 0"
b110100 1!
b0 1"
b0 2"
03"
b10010 3$
b0 4"
05"
b0 6"
b0 7"
b111100 =
b110100 @"
b0 @$
bx B$
b0 E$
b0 F$
b111100 G$
b0 H$
0I$
b0 J$
b0 K$
b111100 L
0L$
b0 M$
b0 N$
b110100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b111100 l!
b0 s!
b0 t!
b10010 u!
b111100 z
b111000 |
b111000 ~!
#400000
0!
0'
#410000
1!
b111100 #!
b111100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b111100 0"
b111000 1!
b0 1"
b0 2"
03"
b10011 3$
b0 4"
05"
b0 6"
b0 7"
b1000000 =
b111000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1000000 G$
b0 H$
0I$
b0 J$
b0 K$
b1000000 L
0L$
b0 M$
b0 N$
b111000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1000000 l!
b0 s!
b0 t!
b10011 u!
b1000000 z
b111100 |
b111100 ~!
#420000
0!
0'
#430000
1!
b1000000 #!
b1000000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1000000 0"
b111100 1!
b0 1"
b0 2"
03"
b10100 3$
b0 4"
05"
b0 6"
b0 7"
b1000100 =
b111100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1000100 G$
b0 H$
0I$
b0 J$
b0 K$
b1000100 L
0L$
b0 M$
b0 N$
b111100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1000100 l!
b0 s!
b0 t!
b10100 u!
b1000100 z
b1000000 |
b1000000 ~!
#440000
0!
0'
#450000
1!
b1000100 #!
b1000100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1000100 0"
b1000000 1!
b0 1"
b0 2"
03"
b10101 3$
b0 4"
05"
b0 6"
b0 7"
b1001000 =
b1000000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1001000 G$
b0 H$
0I$
b0 J$
b0 K$
b1001000 L
0L$
b0 M$
b0 N$
b1000000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1001000 l!
b0 s!
b0 t!
b10101 u!
b1001000 z
b1000100 |
b1000100 ~!
#460000
0!
0'
#470000
1!
b1001000 #!
b1001000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1001000 0"
b1000100 1!
b0 1"
b0 2"
03"
b10110 3$
b0 4"
05"
b0 6"
b0 7"
b1001100 =
b1000100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1001100 G$
b0 H$
0I$
b0 J$
b0 K$
b1001100 L
0L$
b0 M$
b0 N$
b1000100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1001100 l!
b0 s!
b0 t!
b10110 u!
b1001100 z
b1001000 |
b1001000 ~!
#480000
0!
0'
#490000
1!
b1001100 #!
b1001100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1001100 0"
b1001000 1!
b0 1"
b0 2"
03"
b10111 3$
b0 4"
05"
b0 6"
b0 7"
b1010000 =
b1001000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1010000 G$
b0 H$
0I$
b0 J$
b0 K$
b1010000 L
0L$
b0 M$
b0 N$
b1001000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1010000 l!
b0 s!
b0 t!
b10111 u!
b1010000 z
b1001100 |
b1001100 ~!
#500000
0!
0'
#510000
1!
b1010000 #!
b1010000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1010000 0"
b1001100 1!
b0 1"
b0 2"
03"
b11000 3$
b0 4"
05"
b0 6"
b0 7"
b1010100 =
b1001100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1010100 G$
b0 H$
0I$
b0 J$
b0 K$
b1010100 L
0L$
b0 M$
b0 N$
b1001100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1010100 l!
b0 s!
b0 t!
b11000 u!
b1010100 z
b1010000 |
b1010000 ~!
#520000
0!
0'
#530000
1!
b1010100 #!
b1010100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1010100 0"
b1010000 1!
b0 1"
b0 2"
03"
b11001 3$
b0 4"
05"
b0 6"
b0 7"
b1011000 =
b1010000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1011000 G$
b0 H$
0I$
b0 J$
b0 K$
b1011000 L
0L$
b0 M$
b0 N$
b1010000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1011000 l!
b0 s!
b0 t!
b11001 u!
b1011000 z
b1010100 |
b1010100 ~!
#540000
0!
0'
#550000
1!
b1011000 #!
b1011000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1011000 0"
b1010100 1!
b0 1"
b0 2"
03"
b11010 3$
b0 4"
05"
b0 6"
b0 7"
b1011100 =
b1010100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1011100 G$
b0 H$
0I$
b0 J$
b0 K$
b1011100 L
0L$
b0 M$
b0 N$
b1010100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1011100 l!
b0 s!
b0 t!
b11010 u!
b1011100 z
b1011000 |
b1011000 ~!
#560000
0!
0'
#570000
1!
b1011100 #!
b1011100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1011100 0"
b1011000 1!
b0 1"
b0 2"
03"
b11011 3$
b0 4"
05"
b0 6"
b0 7"
b1100000 =
b1011000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1100000 G$
b0 H$
0I$
b0 J$
b0 K$
b1100000 L
0L$
b0 M$
b0 N$
b1011000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1100000 l!
b0 s!
b0 t!
b11011 u!
b1100000 z
b1011100 |
b1011100 ~!
#580000
0!
0'
#590000
1!
b1100000 #!
b1100000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1100000 0"
b1011100 1!
b0 1"
b0 2"
03"
b11100 3$
b0 4"
05"
b0 6"
b0 7"
b1100100 =
b1011100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1100100 G$
b0 H$
0I$
b0 J$
b0 K$
b1100100 L
0L$
b0 M$
b0 N$
b1011100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1100100 l!
b0 s!
b0 t!
b11100 u!
b1100100 z
b1100000 |
b1100000 ~!
#600000
0!
0'
#610000
1!
b1100100 #!
b1100100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1100100 0"
b1100000 1!
b0 1"
b0 2"
03"
b11101 3$
b0 4"
05"
b0 6"
b0 7"
b1101000 =
b1100000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1101000 G$
b0 H$
0I$
b0 J$
b0 K$
b1101000 L
0L$
b0 M$
b0 N$
b1100000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1101000 l!
b0 s!
b0 t!
b11101 u!
b1101000 z
b1100100 |
b1100100 ~!
#620000
0!
0'
#630000
1!
b1101000 #!
b1101000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1101000 0"
b1100100 1!
b0 1"
b0 2"
03"
b11110 3$
b0 4"
05"
b0 6"
b0 7"
b1101100 =
b1100100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1101100 G$
b0 H$
0I$
b0 J$
b0 K$
b1101100 L
0L$
b0 M$
b0 N$
b1100100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1101100 l!
b0 s!
b0 t!
b11110 u!
b1101100 z
b1101000 |
b1101000 ~!
#640000
0!
0'
#650000
1!
b1101100 #!
b1101100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1101100 0"
b1101000 1!
b0 1"
b0 2"
03"
b11111 3$
b0 4"
05"
b0 6"
b0 7"
b1110000 =
b1101000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1110000 G$
b0 H$
0I$
b0 J$
b0 K$
b1110000 L
0L$
b0 M$
b0 N$
b1101000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1110000 l!
b0 s!
b0 t!
b11111 u!
b1110000 z
b1101100 |
b1101100 ~!
#660000
0!
0'
#670000
1!
b1110000 #!
b1110000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1110000 0"
b1101100 1!
b0 1"
b0 2"
03"
b100000 3$
b0 4"
05"
b0 6"
b0 7"
b1110100 =
b1101100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1110100 G$
b0 H$
0I$
b0 J$
b0 K$
b1110100 L
0L$
b0 M$
b0 N$
b1101100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1110100 l!
b0 s!
b0 t!
b100000 u!
b1110100 z
b1110000 |
b1110000 ~!
#680000
0!
0'
#690000
1!
b1110100 #!
b1110100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1110100 0"
b1110000 1!
b0 1"
b0 2"
03"
b100001 3$
b0 4"
05"
b0 6"
b0 7"
b1111000 =
b1110000 @"
b0 @$
bx B$
b0 E$
b0 F$
b1111000 G$
b0 H$
0I$
b0 J$
b0 K$
b1111000 L
0L$
b0 M$
b0 N$
b1110000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1111000 l!
b0 s!
b0 t!
b100001 u!
b1111000 z
b1110100 |
b1110100 ~!
#700000
0!
0'
#710000
1!
b1111000 #!
b1111000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1111000 0"
b1110100 1!
b0 1"
b0 2"
03"
b100010 3$
b0 4"
05"
b0 6"
b0 7"
b1111100 =
b1110100 @"
b0 @$
bx B$
b0 E$
b0 F$
b1111100 G$
b0 H$
0I$
b0 J$
b0 K$
b1111100 L
0L$
b0 M$
b0 N$
b1110100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b1111100 l!
b0 s!
b0 t!
b100010 u!
b1111100 z
b1111000 |
b1111000 ~!
#720000
0!
0'
#730000
1!
b1111100 #!
b1111100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b1111100 0"
b1111000 1!
b0 1"
b0 2"
03"
b100011 3$
b0 4"
05"
b0 6"
b0 7"
b10000000 =
b1111000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10000000 G$
b0 H$
0I$
b0 J$
b0 K$
b10000000 L
0L$
b0 M$
b0 N$
b1111000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10000000 l!
b0 s!
b0 t!
b100011 u!
b10000000 z
b1111100 |
b1111100 ~!
#740000
0!
0'
#750000
1!
b10000000 #!
b10000000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10000000 0"
b1111100 1!
b0 1"
b0 2"
03"
b100100 3$
b0 4"
05"
b0 6"
b0 7"
b10000100 =
b1111100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10000100 G$
b0 H$
0I$
b0 J$
b0 K$
b10000100 L
0L$
b0 M$
b0 N$
b1111100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10000100 l!
b0 s!
b0 t!
b100100 u!
b10000100 z
b10000000 |
b10000000 ~!
#760000
0!
0'
#770000
1!
b10000100 #!
b10000100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10000100 0"
b10000000 1!
b0 1"
b0 2"
03"
b100101 3$
b0 4"
05"
b0 6"
b0 7"
b10001000 =
b10000000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10001000 G$
b0 H$
0I$
b0 J$
b0 K$
b10001000 L
0L$
b0 M$
b0 N$
b10000000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10001000 l!
b0 s!
b0 t!
b100101 u!
b10001000 z
b10000100 |
b10000100 ~!
#780000
0!
0'
#790000
1!
b10001000 #!
b10001000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10001000 0"
b10000100 1!
b0 1"
b0 2"
03"
b100110 3$
b0 4"
05"
b0 6"
b0 7"
b10001100 =
b10000100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10001100 G$
b0 H$
0I$
b0 J$
b0 K$
b10001100 L
0L$
b0 M$
b0 N$
b10000100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10001100 l!
b0 s!
b0 t!
b100110 u!
b10001100 z
b10001000 |
b10001000 ~!
#800000
0!
0'
#810000
1!
b10001100 #!
b10001100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10001100 0"
b10001000 1!
b0 1"
b0 2"
03"
b100111 3$
b0 4"
05"
b0 6"
b0 7"
b10010000 =
b10001000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10010000 G$
b0 H$
0I$
b0 J$
b0 K$
b10010000 L
0L$
b0 M$
b0 N$
b10001000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10010000 l!
b0 s!
b0 t!
b100111 u!
b10010000 z
b10001100 |
b10001100 ~!
#820000
0!
0'
#830000
1!
b10010000 #!
b10010000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10010000 0"
b10001100 1!
b0 1"
b0 2"
03"
b101000 3$
b0 4"
05"
b0 6"
b0 7"
b10010100 =
b10001100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10010100 G$
b0 H$
0I$
b0 J$
b0 K$
b10010100 L
0L$
b0 M$
b0 N$
b10001100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10010100 l!
b0 s!
b0 t!
b101000 u!
b10010100 z
b10010000 |
b10010000 ~!
#840000
0!
0'
#850000
1!
b10010100 #!
b10010100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10010100 0"
b10010000 1!
b0 1"
b0 2"
03"
b101001 3$
b0 4"
05"
b0 6"
b0 7"
b10011000 =
b10010000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10011000 G$
b0 H$
0I$
b0 J$
b0 K$
b10011000 L
0L$
b0 M$
b0 N$
b10010000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10011000 l!
b0 s!
b0 t!
b101001 u!
b10011000 z
b10010100 |
b10010100 ~!
#860000
0!
0'
#870000
1!
b10011000 #!
b10011000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10011000 0"
b10010100 1!
b0 1"
b0 2"
03"
b101010 3$
b0 4"
05"
b0 6"
b0 7"
b10011100 =
b10010100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10011100 G$
b0 H$
0I$
b0 J$
b0 K$
b10011100 L
0L$
b0 M$
b0 N$
b10010100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10011100 l!
b0 s!
b0 t!
b101010 u!
b10011100 z
b10011000 |
b10011000 ~!
#880000
0!
0'
#890000
1!
b10011100 #!
b10011100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10011100 0"
b10011000 1!
b0 1"
b0 2"
03"
b101011 3$
b0 4"
05"
b0 6"
b0 7"
b10100000 =
b10011000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10100000 G$
b0 H$
0I$
b0 J$
b0 K$
b10100000 L
0L$
b0 M$
b0 N$
b10011000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10100000 l!
b0 s!
b0 t!
b101011 u!
b10100000 z
b10011100 |
b10011100 ~!
#900000
0!
0'
#910000
1!
b10100000 #!
b10100000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10100000 0"
b10011100 1!
b0 1"
b0 2"
03"
b101100 3$
b0 4"
05"
b0 6"
b0 7"
b10100100 =
b10011100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10100100 G$
b0 H$
0I$
b0 J$
b0 K$
b10100100 L
0L$
b0 M$
b0 N$
b10011100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10100100 l!
b0 s!
b0 t!
b101100 u!
b10100100 z
b10100000 |
b10100000 ~!
#920000
0!
0'
#930000
1!
b10100100 #!
b10100100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10100100 0"
b10100000 1!
b0 1"
b0 2"
03"
b101101 3$
b0 4"
05"
b0 6"
b0 7"
b10101000 =
b10100000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10101000 G$
b0 H$
0I$
b0 J$
b0 K$
b10101000 L
0L$
b0 M$
b0 N$
b10100000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10101000 l!
b0 s!
b0 t!
b101101 u!
b10101000 z
b10100100 |
b10100100 ~!
#940000
0!
0'
#950000
1!
b10101000 #!
b10101000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10101000 0"
b10100100 1!
b0 1"
b0 2"
03"
b101110 3$
b0 4"
05"
b0 6"
b0 7"
b10101100 =
b10100100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10101100 G$
b0 H$
0I$
b0 J$
b0 K$
b10101100 L
0L$
b0 M$
b0 N$
b10100100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10101100 l!
b0 s!
b0 t!
b101110 u!
b10101100 z
b10101000 |
b10101000 ~!
#960000
0!
0'
#970000
1!
b10101100 #!
b10101100 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10101100 0"
b10101000 1!
b0 1"
b0 2"
03"
b101111 3$
b0 4"
05"
b0 6"
b0 7"
b10110000 =
b10101000 @"
b0 @$
bx B$
b0 E$
b0 F$
b10110000 G$
b0 H$
0I$
b0 J$
b0 K$
b10110000 L
0L$
b0 M$
b0 N$
b10101000 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10110000 l!
b0 s!
b0 t!
b101111 u!
b10110000 z
b10101100 |
b10101100 ~!
#980000
0!
0'
#990000
1!
b10110000 #!
b10110000 %"
1'
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
bx /"
b10110000 0"
b10101100 1!
b0 1"
b0 2"
03"
b110000 3$
b0 4"
05"
b0 6"
b0 7"
b10110100 =
b10101100 @"
b0 @$
bx B$
b0 E$
b0 F$
b10110100 G$
b0 H$
0I$
b0 J$
b0 K$
b10110100 L
0L$
b0 M$
b0 N$
b10101100 O"
0O$
b0 P$
b0 Q$
0R$
b0 S$
b0 T$
0U$
b0 V$
b0 W$
0X$
b0 Y$
b0 Z$
0[$
b0 \$
bx ]#
b0 ]$
0^$
b10110100 l!
b0 s!
b0 t!
b110000 u!
b10110100 z
b10110000 |
b10110000 ~!
#1000000
0!
0'
